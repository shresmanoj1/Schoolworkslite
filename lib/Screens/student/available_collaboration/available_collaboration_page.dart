import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:provider/provider.dart';import 'package:schoolworkspro_app/Screens/student/available_collaboration/collaboration_details_page.dart';import 'package:schoolworkspro_app/Screens/student/available_collaboration/collaboration_view_model.dart';import '../../../config/api_response_config.dart';import '../../../constants/colors.dart';import '../../../response/authenticateduser_response.dart';class AvailableCollaborationScreen extends StatefulWidget {  const AvailableCollaborationScreen({Key? key}) : super(key: key);  @override  State<AvailableCollaborationScreen> createState() =>      _AvailableCollaborationScreenState();}class _AvailableCollaborationScreenState    extends State<AvailableCollaborationScreen> {  late CollaborationViewModel _provider;  User? user;  @override  initState() {    super.initState();    refreshPage();  }  Future<void> refreshPage() async {    WidgetsBinding.instance.addPostFrameCallback((_) {      _provider =          Provider.of<CollaborationViewModel>(context, listen: false);      _provider.fetchAvailableCollaboration();    });  }  @override  Widget build(BuildContext context) {    var size = MediaQuery.of(context).size;    final double itemHeight = (size.height - kToolbarHeight - 24) / 5;    final double itemWidth = size.width / 2;    return Consumer<CollaborationViewModel>(        builder: (context, value, child) {      return Scaffold(        appBar: AppBar(          backgroundColor: logoTheme,          // automaticallyImplyLeading: false,          centerTitle: false,          title: const Text(            "Available Collaborate",            style: TextStyle(color: white),          ),          // leading: IconButton(          //   onPressed: () {          //     Navigator.pop(context);          //   },          //   icon: const Icon(          //     Icons.arrow_back_ios,          //     color: black,          //   ),          // ),        ),        body: RefreshIndicator(          onRefresh: () => refreshPage(),          child: isLoading(value.availableCollaborationApiResponse)              ? const Center(                  child: CupertinoActivityIndicator(),                )              : value.availableCollaboration.assignments == null &&                      value.availableCollaboration.assignments!.isEmpty                  ? Image.asset("assets/images/no_content.PNG")          // NoInternetWidget(          //             isShowBorder: false,          //             onTab: () {          //               refreshPage();          //             },          //           )                  : Padding(                      padding: const EdgeInsets.symmetric(                          horizontal: 20, vertical: 15),                      child: GridView.builder(                        shrinkWrap: true,                        itemCount: value.availableCollaboration                            .assignments!.length,                        // controller:                        //     ScrollController(keepScrollOffset: false),                        physics: const BouncingScrollPhysics(),                        gridDelegate:                            SliverGridDelegateWithFixedCrossAxisCount(                          crossAxisCount: 2,                          crossAxisSpacing: 4.0,                          mainAxisSpacing: 4.0,                          childAspectRatio: (itemWidth / itemHeight),                        ),                        itemBuilder:                            (BuildContext context, int index) {                          return Card(                              elevation: 4,                              child: InkWell(                                onTap: () {                                  Navigator.push(                                      context,                                      MaterialPageRoute(                                        builder: (context) =>                                            CreateCollaborationScreen(                                          id: value.availableCollaboration.assignments![index].id.toString(),                                              assignmentId: value.availableCollaboration.assignments![index].id.toString(),                                              assignmentName: value.availableCollaboration.assignments![index].assignmentTitle.toString(),                                        ),                                      ));                                  // Navigator.pushNamed(context, routeCreateCollaboration);                                },                                child: Padding(                                  padding:                                      const EdgeInsets.symmetric(                                          horizontal: 5,                                          vertical: 5),                                  child: Column(                                    crossAxisAlignment:                                        CrossAxisAlignment.center,                                    mainAxisAlignment:                                        MainAxisAlignment.center,                                    children: [                                      Flexible(                                          child: Text(                                              value                                                  .availableCollaboration                                                  .assignments![                                                      index]                                                  .assignmentTitle                                                  .toString(),                                              maxLines: 4,                                              style: const TextStyle(                                                  color: black,                                                  fontSize:                                                      16,                                                  overflow:                                                      TextOverflow                                                          .ellipsis,                                                  fontWeight:                                                      FontWeight                                                          .w600))),                                      // Row(                                      //   mainAxisAlignment:                                      //       MainAxisAlignment                                      //           .center,                                      //   children: [                                      //     Text(                                      //         value                                      //             .availableCollaboration                                      //             .assignments![                                      //                 index]                                      //             .assignmentGroups!                                      //             .length                                      //             .toString(),                                      //         style:                                      //             const TextStyle(                                      //                 fontSize:                                      //                     font_16)),                                      //     const Text(                                      //       " groups",                                      //       style: TextStyle(                                      //           fontSize:                                      //               font_16),                                      //     ),                                      //   ],                                      // ),                                    ],                                  ),                                ),                              ));                        },                      ),                    ),        ),      );    });  }}